# dnsmasq configuration for iPXE Boot Server
# High School Esports LAN Infrastructure
# Generated from config.yaml

# Interface to listen on
interface={{ ansible_default_ipv4.interface }}
bind-interfaces

# DHCP range for client machines
dhcp-range={{ network.dhcp_range_start }},{{ network.dhcp_range_end }},12h

# Gateway (router)
dhcp-option=3,{{ network.gateway }}

# DNS servers
dhcp-option=6,{{ network.dns_primary }},{{ network.dns_secondary }}

# Disable DNS function (we only want DHCP/TFTP)
port=0

# Enable TFTP server
enable-tftp
tftp-root=/srv/tftp
tftp-secure

# Set TFTP server address
dhcp-option=66,{{ network.ipxe_server_ip }}

# PXE Boot Configuration
# Boot file depends on client architecture (BIOS vs UEFI)

# BIOS clients (legacy boot)
dhcp-match=set:bios,option:client-arch,0
dhcp-boot=tag:bios,undionly.kpxe

# UEFI clients (modern systems)
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9
dhcp-boot=tag:efi-x86_64,ipxe.efi

# UEFI HTTP Boot (if supported)
dhcp-match=set:efi-http,option:client-arch,16
dhcp-boot=tag:efi-http,"http://{{ network.ipxe_server_ip }}/boot.ipxe"

# Once iPXE is loaded, chain to our boot menu
dhcp-userclass=set:ipxe,iPXE
dhcp-boot=tag:ipxe,http://{{ network.ipxe_server_ip }}/boot.ipxe

# Logging
log-dhcp
log-queries

# Lease file location
dhcp-leasefile=/var/lib/misc/dnsmasq.leases

# Domain name for DHCP clients
domain={{ organization.short_name | lower }}.lan
local=/{{ organization.short_name | lower }}.lan/

# Assign hostnames based on MAC address format
# This helps identify machines: ESPORTS-001, ESPORTS-002, etc.
# Static assignments can be added here for specific machines

# Example static assignments (uncomment and customize as needed):
{% if dhcp_static_assignments is defined %}
{% for assignment in dhcp_static_assignments %}
# {{ assignment.description }}
dhcp-host={{ assignment.mac }},{{ assignment.ip }},{{ assignment.hostname }}
{% endfor %}
{% endif %}

# DHCP options for Windows clients
# Option 252: Windows WPAD URL (disable to prevent delays)
dhcp-option=252,"\n"

# Increase DHCP packet size for PXE (helps with large boot files)
dhcp-option-force=210,/srv/tftp/

# Prevent conflicts with existing DHCP servers
# Remove this if you want dnsmasq to be authoritative
# dhcp-authoritative

# Rapid commit for faster DHCP (reduces handshake)
dhcp-rapid-commit

# Increase cache size for better performance
cache-size=10000

# Never forward plain names (without a dot or domain part)
domain-needed

# Never forward addresses in the non-routed address spaces
bogus-priv

# Filter useless Windows queries
filterwin2k

# DHCP reservations for infrastructure servers
dhcp-host=ipxe-server,{{ network.ipxe_server_ip }}
dhcp-host=lancache-server,{{ network.lancache_server_ip }}
dhcp-host=file-server,{{ network.file_server_ip }}

{% if network.vlan_id is defined and network.vlan_id %}
# VLAN Configuration
# Interface with VLAN tag
interface={{ ansible_default_ipv4.interface }}.{{ network.vlan_id }}
{% endif %}

# Performance tuning for large deployments
# Increase max DHCP leases
dhcp-lease-max=250

# Additional options for optimization
# Reduce ARP cache timeout issues
dhcp-option=vendor:MSFT,2,1i

# Disable router advertisements (IPv6)
ra-param=*,0,0

# Conference/tournament mode optimizations
{% if advanced is defined and advanced.pxe is defined %}
# Custom timeout from config
{% if advanced.pxe.timeout_seconds is defined %}
# Boot timeout configured: {{ advanced.pxe.timeout_seconds }} seconds
{% endif %}
{% endif %}

# Organization branding in DHCP option
# This shows up in some network tools
dhcp-option=vendor:,{{ organization.name }}

# Log facility
log-facility=/var/log/dnsmasq.log

# Don't read /etc/resolv.conf or /etc/hosts
no-resolv
no-hosts

# Read additional host files if needed
# addn-hosts=/etc/hosts.custom